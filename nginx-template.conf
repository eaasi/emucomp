env EMIL_IMAGE_PATH;
env EMIL_EMULATOR_REPO_PATH;
env EMIL_IMAGE;
env EMIL_OBJ;

worker_processes  8;
error_log /dev/stdout error;

events {
    worker_connections 1024;
}

http {
    default_type application/octet-stream;
    keepalive_timeout 65;
    sendfile on;

    access_log /dev/stdout;

    # resolver-cache definition
    proxy_cache_path /var/cache/nginx/resolver
                     levels=1:2 keys_zone=resolver-cache:8m
                     max_size=1g inactive=1h use_temp_path=off;

    server {
        listen 8080;
        resolver 127.0.0.11 ipv6=off;

{% if resolver_cache_kind == 'slice' %}
            slice {{ resolver_cache_slice_size }};

            proxy_set_header Range $slice_range;
{% endif %}
            proxy_http_version 1.1;
            proxy_pass $target;
        }
    }

    server {
        listen 8082;
        resolver 127.0.0.11 ipv6=off;

{% endif %}
        set baseurl = eaas_protocol + eaas_gw_hostname + eaas_base_url_port %}

        # case: emulators
        location ~* /emulators/(?<imgid>.+)$ {
            root $EMIL_EMULATOR_REPO_PATH;
            try_files $uri;
        }

        # case: images
        location ~* ^/images/(?<imgid>.+)$ {
            root $EMIL_IMAGE;
            try_files $uri;
        }

        # case: objects
        location ~* ^/objects/content-object$ {
            root $EMIL_OBJ;
            try_files $uri /content-object-floppy-carmenworld.img;
        }

        location ~* ^/objects/software-object$ {
            root $EMIL_OBJ;
            try_files $uri /software-object-floppy-mosaic.img;
        }
;
;         # case: component-resources
;         location ~* /components/(?<compid>[^/]+)/(?<kind>[^/]+)/(?<subres>.+)$ {
;             root $EMIL_COMPONENT_REPO_PATH/$compid/$kind;
;             try_files $uri /emil/components/$compid/$kind/$subres/url;
;         }

        # case: resources with embedded access-tokens
        location ~* ^/t/(?<token>[^/]+)/(?<subres>.+)$ {
            set proxyport = '8080'
            proxy_pass http://127.0.0.1:{{ proxyport }}/$subres$is_args$args;
            proxy_set_header Authorization "Bearer $token";
        }
    }
}
