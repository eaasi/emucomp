name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create /tmp/oci-tools directory on runner
        run: mkdir /tmp/oci-tools

      - name: Prepare and Build OCI tools on runner
        run: |
            cd emucon-tools/
            . ./bootstrap.sh
            ./installer/install-oci-tools.sh --destination /tmp/oci-tools

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/emucomp
          tags: |
            latest
            type=raw,value=${{ github.run_number }}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ghcr.io/${{ github.repository_owner }}/emucomp:latest
          labels: ${{ steps.meta.outputs.labels }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GitHub Container Registry via OIDC
        uses: docker/login-action@v3
        with:
          registry: ghcr.io

      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/emucomp:latest
            ghcr.io/${{ github.repository_owner }}/emucomp:${{ needs.build.outputs.image_tag }}
